{"version":3,"sources":["Components/ContactListItem/ContactListItem.module.css","Components/App/App.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","Components/App/animate.module.css","Components/Notifications/Notifications.module.css","redux/contacts/contactsAction.js","redux/contacts/contactsConstans.js","Components/ContactForm/ContactForm.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Notifications/Notifications.js","Components/App/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","item","id","uuidv4","removeContact","filter","getLocalStorage","ContactForm","state","handleOnChange","target","value","setState","handleSubmit","e","preventDefault","props","contacts","some","openModal","onAddContact","form","style","label","input","button","this","className","onSubmit","type","onChange","placeholder","required","Component","mapDispatchToProps","contactsAction","connect","items","ownProps","contact","find","dispatch","onRemove","container","span","onClick","onRemoveContact","normalizeFilter","toLowerCase","includes","ul","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","onFilter","Notifications","css","box","onCheckContact","App","contactExist","setTimeout","storageContacts","JSON","parse","localStorage","getItem","title","in","appear","unmountOnExit","animate","contactReducer","createReducer","action","contactsLocalStorege","parseContacts","setItem","stringify","newLS","filterReducer","combineReducers","store","configureStore","reducer","contactsReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6eff5df8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactListItem_ul__25RLU\",\"container\":\"ContactListItem_container__3cA8u\",\"button\":\"ContactListItem_button__J5xFy\",\"item\":\"ContactListItem_item__1R_id\",\"span\":\"ContactListItem_span__1JRwJ\",\"enter\":\"ContactListItem_enter__nGomx\",\"enterActive\":\"ContactListItem_enterActive__Ldtnf\",\"exit\":\"ContactListItem_exit__1a04D\",\"exitActive\":\"ContactListItem_exitActive__1ikMe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3hzjk\",\"title\":\"App_title__3rQSa\",\"appear\":\"App_appear__1WXNu\",\"appearActive\":\"App_appearActive__2FqRt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__3o5U1\",\"container\":\"ContactList_container__1M6DG\",\"button\":\"ContactList_button__1cRZQ\",\"item\":\"ContactList_item__1ftlw\",\"span\":\"ContactList_span__14_Ix\",\"enter\":\"ContactList_enter__2A3iB\",\"enterActive\":\"ContactList_enterActive__2_HF-\",\"exit\":\"ContactList_exit__1j9e1\",\"exitActive\":\"ContactList_exitActive__3rzu4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__UE__b\",\"input\":\"Filter_input__1YIqQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"animate_enter__UJ01q\",\"enterActive\":\"animate_enterActive__2T72m\",\"exit\":\"animate_exit__3ZHll\",\"exitActive\":\"animate_exitActive__36d9l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Notifications_box__24qvM\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { ADD, REMOVE, FILTER, LOCAL_STOREGE } from \"./contactsConstans\";\r\n\r\nconst addContact = createAction(ADD, (name, number) => ({\r\n  payload: {\r\n    item: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  },\r\n}));\r\n\r\nconst removeContact = createAction(REMOVE);\r\nconst filter = createAction(FILTER);\r\nconst getLocalStorage = createAction(LOCAL_STOREGE);\r\n\r\nexport default {\r\n  addContact,\r\n  removeContact,\r\n  filter,\r\n  getLocalStorage,\r\n};\r\n","export const ADD = \"type/addContact\";\r\nexport const REMOVE = \"type/removeContact\";\r\nexport const FILTER = \"type/filter\";\r\nexport const LOCAL_STOREGE = \"type/LS\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./ContactForm.module.css\";\r\n\r\nimport contactsAction from \"../../redux/contacts/contactsAction\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleOnChange = ({ target }) => {\r\n    const { value, name } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    const isInclude = this.props.contacts.some(\r\n      (item) => item.name === this.state.name\r\n    );\r\n    if (isInclude) {\r\n      this.props.openModal();\r\n      this.setState({ name: \"\", number: \"\" });\r\n      return;\r\n    }\r\n\r\n    this.props.onAddContact(name, number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    const { form, label, input, button } = style;\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={form} onSubmit={this.handleSubmit}>\r\n        <label className={label}>\r\n          Name\r\n          <input\r\n            className={input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.handleOnChange}\r\n            value={name}\r\n            placeholder=\"Enter name\"\r\n          />\r\n        </label>\r\n        <label className={label}>\r\n          Number\r\n          <input\r\n            className={input}\r\n            type=\"number\"\r\n            name=\"number\"\r\n            onChange={this.handleOnChange}\r\n            value={number}\r\n            placeholder=\"Enter number\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func,\r\n  openModal: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactsAction.addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport contactsAction from \"../../redux/contacts/contactsAction\";\r\nimport style from \"./ContactListItem.module.css\";\r\n\r\nfunction ContactListItem({ name, number, onRemove }) {\r\n  const { container, button, item, span } = style;\r\n  return (\r\n    <li className={container}>\r\n      <div className={item}>\r\n        <span className={span}>Name:</span> {name}\r\n      </div>\r\n\r\n      <div className={item}>\r\n        <span className={span}>Ph.</span> {number}\r\n      </div>\r\n      <button className={button} type=\"button\" onClick={onRemove}></button>\r\n    </li>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const contact = state.contacts.items.find((item) => item.id === ownProps.id);\r\n  return { ...contact };\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onRemove: () => dispatch(contactsAction.removeContact(ownProps.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onRemove: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport contactsAction from \"../../redux/contacts/contactsAction\";\r\nimport style from \"./ContactList.module.css\";\r\n\r\nimport ContactListItem from '../ContactListItem/ContactListItem'\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  const {ul } = style;\r\n  return (\r\n    <>\r\n      <TransitionGroup component=\"ul\" className={ul}>\r\n        {contacts.map((contact) => (\r\n          <CSSTransition key={contact.id} timeout={250} classNames={style}>\r\n            <ContactListItem id={contact.id}/>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts;\r\n  const normalizeFilter = filter.toLowerCase();\r\n  const vibibleContact = items.filter((item) =>\r\n    item.name.toLowerCase().includes(normalizeFilter)\r\n  );\r\n  return { contacts: vibibleContact };\r\n};\r\nconst mapDispatchToProps = {\r\n  onRemoveContact: contactsAction.removeContact,\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsAction from \"../../redux/contacts/contactsAction\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onFilter }) => {\r\n  const { container, input } = style;\r\n  return (\r\n    <div className={container}>\r\n      <p>Find conctact by name</p>\r\n      <input\r\n        className={input}\r\n        type=\"text\"\r\n        onChange={(e) => onFilter(e.target.value)}\r\n        value={value}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onFilter: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\nconst mapDispatchToProps = {\r\n  onFilter: contactsAction.filter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react'\r\nimport css from './Notifications.module.css'\r\n\r\nexport default function Notifications() {\r\n    return (\r\n        <div className={css.box}>\r\n            Already exsist\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport style from \"./App.module.css\";\r\nimport animate from \"./animate.module.css\";\r\nimport contactsAction from \"../../redux/contacts/contactsAction\";\r\n\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport Notifications from \"../Notifications/Notifications\";\r\n\r\nconst mapDispatchToProps = {\r\n  onCheckContact: contactsAction.getLocalStorage,\r\n};\r\nclass App extends Component {\r\n  state = {\r\n    contactExist: false,\r\n  };\r\n  openModal = () => {\r\n    this.setState({ contactExist: true });\r\n    setTimeout(() => this.setState({ contactExist: false }), 3000);\r\n  };\r\n\r\n  componentDidMount() {\r\n    const storageContacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n    if (storageContacts) {\r\n      this.props.onCheckContact(storageContacts);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { contactExist } = this.state;\r\n    const { container, title } = style;\r\n    return (\r\n      <section className={container}>\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          timeout={500}\r\n          classNames={style}\r\n          unmountOnExit\r\n        >\r\n          <h2 className={title}>Phonebook</h2>\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          classNames={animate}\r\n          in={contactExist}\r\n          timeout={250}\r\n          unmountOnExit\r\n        >\r\n          <Notifications />\r\n        </CSSTransition>\r\n\r\n        <ContactForm openModal={this.openModal} />\r\n        <h2 className={title}>Contacts</h2>\r\n        <ContactList />\r\n        <Filter />\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(App);\r\nApp.propTypes = {\r\n  onCheckContact: PropTypes.func,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsAction from \"./contactsAction\";\r\n\r\nconst addContact = (state, action) => {\r\n  const contact = action.payload.item;\r\n  const contactsLocalStorege = localStorage.getItem(\"contacts\");\r\n  if (!contactsLocalStorege) {\r\n    localStorage.setItem(\"contacts\", JSON.stringify([contact]));\r\n  } else {\r\n    const parseContacts = JSON.parse(contactsLocalStorege);\r\n    localStorage.setItem(\r\n      \"contacts\",\r\n      JSON.stringify([...parseContacts, contact])\r\n    );\r\n  }\r\n  return [...state, contact];\r\n};\r\nconst removeContact = (state, { payload }) => {\r\n  const getLS = JSON.parse(localStorage.getItem(\"contacts\"));\r\n  const newLS = getLS.filter((item) => item.id !== payload);\r\n  localStorage.setItem(\"contacts\", JSON.stringify(newLS));\r\n\r\n  return state.filter((item) => item.id !== payload);\r\n};\r\nconst getFromLS = (state, action) => action.payload;\r\n\r\nconst contactReducer = createReducer([], {\r\n  [contactsAction.addContact]: addContact,\r\n  [contactsAction.removeContact]: removeContact,\r\n  [contactsAction.getLocalStorage]: getFromLS,\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [contactsAction.filter]: (state, action) => action.payload,\r\n});\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case contactsAction.addContact.type:\r\n//       return [...state, payload.item];\r\n//     case contactsAction.removeContact.type:\r\n//       return state.filter((item) => item.id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items: contactReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n});\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./Components/App/App\";\n\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__20QK2\",\"label\":\"ContactForm_label__3AocZ\",\"input\":\"ContactForm_input__38W7-\",\"button\":\"ContactForm_button__emwDd\"};"],"sourceRoot":""}